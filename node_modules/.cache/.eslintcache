[{"C:\\Users\\seany\\OneDrive\\Desktop\\front end\\react-giph-start\\src\\index.js":"1","C:\\Users\\seany\\OneDrive\\Desktop\\front end\\react-giph-start\\src\\App.js":"2","C:\\Users\\seany\\OneDrive\\Desktop\\front end\\react-giph-start\\src\\components\\GiphyViewer.js":"3"},{"size":288,"mtime":1697707876000,"results":"4","hashOfConfig":"5"},{"size":315,"mtime":1697707876000,"results":"6","hashOfConfig":"5"},{"size":3869,"mtime":1698943373918,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oezgmh",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17"},"C:\\Users\\seany\\OneDrive\\Desktop\\front end\\react-giph-start\\src\\index.js",[],[],"C:\\Users\\seany\\OneDrive\\Desktop\\front end\\react-giph-start\\src\\App.js",[],[],"C:\\Users\\seany\\OneDrive\\Desktop\\front end\\react-giph-start\\src\\components\\GiphyViewer.js",["18"],[],"import axios from \"axios\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { Button, Card, Row, Dropdown, DropdownButton } from \"react-bootstrap\";\r\n\r\nconst GIPHY_URL = `http://api.giphy.com/v1/gifs`;\r\n\r\nconst API_KEY = `WqCf42eGdmX0mg4iKYuvvMor68YlahOA`;\r\n\r\nconst GiphyViewer = () => {\r\n  const [gifs, setGifs] = useState([]);\r\n\r\n  const [term, setTerm] = useState(\"\");\r\n\r\n  const [limit, setLimit] = useState(15);\r\n\r\n  useEffect(() => {\r\n    axios\r\n\r\n      .get(`${GIPHY_URL}/trending?api_key=${API_KEY}`)\r\n\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n\r\n        setGifs(response.data.data);\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setTerm(e.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    searchGif();\r\n  };\r\n\r\n  const handleKeyUp = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      searchGif();\r\n    }\r\n  };\r\n\r\n  const searchGif = () => {\r\n    if (!term) {\r\n      alert(\"Please enter a search term\");\r\n\r\n      return;\r\n    }\r\n\r\n    axios\r\n\r\n      .get(`${GIPHY_URL}/search?api_key=${API_KEY}&q=${term}&limit=${limit}`)\r\n\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n\r\n        setGifs(response.data.data);\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    setTerm(\"\");\r\n  };\r\n\r\n  const handleTrendingClick = () => {\r\n    getTrending();\r\n  };\r\n\r\n  const getTrending = () => {\r\n    axios\r\n\r\n      .get(`${GIPHY_URL}/trending?api_key=${API_KEY}&limit=${limit}`)\r\n\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n\r\n        setGifs(response.data.data);\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleRandomClick = () => {\r\n    getRandom();\r\n  };\r\n\r\n  const getRandom = () => {\r\n    axios\r\n\r\n      .get(`${GIPHY_URL}/random?api_key=${API_KEY}&limit=${limit}`)\r\n\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n\r\n        setGifs([response.data.data]);\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSelect = (amount) => {\r\n    setLimit(amount);\r\n  };\r\n\r\n  const gifComponents = gifs.map((g) => {\r\n    return (\r\n      <GifCard\r\n        key={g.id}\r\n        title={g.title}\r\n        url={g.url}\r\n        image={g.images.fixed_width.url}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search\">\r\n        <input\r\n          type=\"text\"\r\n          value={term}\r\n          onChange={handleChange}\r\n          onKeyUp={handleKeyUp}\r\n        />\r\n\r\n        <Button variant=\"primary\" onClick={handleClick}>\r\n          Search\r\n        </Button>\r\n\r\n        <Button variant=\"info\" onClick={handleTrendingClick}>\r\n          Trending\r\n        </Button>\r\n\r\n        <Button variant=\"warning\" onClick={handleRandomClick}>\r\n          Random\r\n        </Button>\r\n\r\n        <DropdownButton\r\n          bg=\"dark\"\r\n          text=\"light\"\r\n          size=\"sm\"\r\n          id=\"dropdown-basic-button\"\r\n          title=\"Limit\"\r\n          variant=\"secondary\"\r\n          onSelect={handleSelect}\r\n        >\r\n          <Dropdown.Item eventKey={15}>15</Dropdown.Item>\r\n          <Dropdown.Item eventKey={20}>20</Dropdown.Item>\r\n          <Dropdown.Item eventKey={25}>25</Dropdown.Item>\r\n          <Dropdown.Item eventKey={50}>50</Dropdown.Item>\r\n        </DropdownButton>\r\n\r\n        <Row className=\"g-4\" md={3} xs={1}>\r\n          {gifComponents}\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst GifCard = (props) => {\r\n  return (\r\n    <Card>\r\n      <Card.Img variant=\"top\" src={props.image} />\r\n\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <a href={props.url} target=\"_blank\">\r\n            {props.title}\r\n          </a>\r\n        </Card.Title>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default GiphyViewer;\r\n",{"ruleId":"19","severity":1,"message":"20","line":179,"column":11,"nodeType":"21","messageId":"22","endLine":179,"endColumn":47,"fix":"23"},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"24","text":"25"},[3726,3726]," rel=\"noreferrer\""]